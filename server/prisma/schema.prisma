generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(25)
  email    String    @unique @db.VarChar(50)
  password String
  createAt DateTime  @default(now())
  role     role      @default(USER)
  cart     cart?
  payment  payment[]
}

model product {
  id         Int       @id @default(autoincrement())
  name       String    @unique @db.VarChar(100)
  desc       String?   @db.VarChar(255)
  price      Int       @default(0)
  checked    Boolean   @default(false)
  sold       Int       @default(0)
  createAt   DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  categoryId Int?
  imageId    Int?
  item       item[]
  category   category? @relation(fields: [categoryId], references: [id])
  image      image?    @relation(fields: [imageId], references: [id])

  @@index([categoryId], map: "product_categoryId_fkey")
  @@index([imageId], map: "product_imageId_fkey")
}

model category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  desc      String
  createAt  DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  product[]
}

model image {
  id       Int       @id @default(autoincrement())
  publicId String    @unique
  url      String    @unique @db.VarChar(255)
  name     String
  size     Int
  format   String    @db.Char(4)
  createAt DateTime  @default(now())
  products product[]
}

model cart {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  status   status   @default(PENDING)
  userId   Int      @unique
  user     user     @relation(fields: [userId], references: [id])
  item     item[]
  payment  payment?
}

model item {
  id        Int      @id @default(autoincrement())
  quantity  Int
  price     Int
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
  productId Int?
  cartId    Int?
  cart      cart?    @relation(fields: [cartId], references: [id])
  product   product? @relation(fields: [productId], references: [id])

  @@index([cartId], map: "item_cartId_fkey")
  @@index([productId], map: "item_productId_fkey")
}

model payment {
  id         Int      @id @default(autoincrement())
  address    String
  total      Int
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt
  first_name String
  last_name  String
  paymentId  String
  cartid     Int      @unique
  userId     Int?
  cart       cart     @relation(fields: [cartid], references: [id])
  user       user?    @relation(fields: [userId], references: [id])

  @@index([userId], map: "payment_userId_fkey")
}

enum role {
  USER
  ADMIN
}

enum status {
  PENDING
  PAID
}
